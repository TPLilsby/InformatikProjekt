@page "/stock-overview"
@using Lageret.Shared.Models
@using Lageret.Shared.Services
@inject ProductService ProductService
@inject SessionService SessionService
@inject DatabaseUserService UserService

<h3>Lageroversigt</h3>

@if (!SessionService.IsLoggedIn)
{
    <p class="text-danger">Du skal være logget ind for at se denne side.</p>
}
else
{
    <table class="table table-bordered table-striped">
        <thead class="table-dark">
            <tr>
                <th>Navn</th>
                <th>Antal</th>
                <th>Min. Lager</th>
                <th>Kategori</th>
                <th>Genbestil</th>
                <th>Antal til Genbestilling</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in products)
            {
                <tr>
                    <td>@p.Name</td>
                    <td>@p.Quantity</td>
                    <td>@p.StockLimit</td>
                    <td>@categories.FirstOrDefault(c => c.CategoryId == p.CategoryId)?.Name</td>
                    <td>
                        @if (p.Quantity < p.StockLimit)
                        {
                            <button class="btn btn-warning btn-sm" @onclick="() => ToggleReorder(p.ProductId)">Genbestil</button>
                        }
                        else
                        {
                            <span class="text-success">OK</span>
                        }
                    </td>
                    <td>
                        @if (p.Quantity < p.StockLimit)
                        {
                            <input type="number" @bind="reorderQuantity" min="1" class="form-control" placeholder="Antal">
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Toast besked -->
    @if (showToast)
    {
        <div class="toast align-items-center text-white bg-success border-0 position-fixed bottom-0 end-0 m-3" role="alert" aria-live="assertive" aria-atomic="true" style="z-index: 1050;">
            <div class="d-flex">
                <div class="toast-body">
                    Varen er genbestilt succesfuldt!
                </div>
                <button type="button" class="btn-close btn-close-white" aria-label="Close" @onclick="HideToast"></button>
            </div>
        </div>
    }
}

@code {
    private List<Product> products = new();
    private List<Category> categories = new();
    private int reorderQuantity = 0; // Lokal variabel til det ønskede genbestillingsantal
    private bool showToast = false; // Variabel til at kontrollere visning af toast

    protected override async Task OnInitializedAsync()
    {
        products = await ProductService.GetAllAsync();
        categories = await ProductService.GetCategoriesAsync();
    }

    private async Task ToggleReorder(int productId)
    {
        if (reorderQuantity > 0) // Tjek om der er angivet et antal
        {
            var user = await UserService.GetUserByNameAsync(SessionService.Username);
            if (user != null)
            {
                await ProductService.ReorderAsync(productId, user.UserId, reorderQuantity);
                products = await ProductService.GetAllAsync(); // Opdater visning

                // Vis toast og nulstil genbestillingsfelt
                showToast = true;
                reorderQuantity = 0;

                // Skjul toast efter 3 sekunder
                StateHasChanged();
                await Task.Delay(3000); // Vent 3 sekunder
                showToast = false;
                StateHasChanged();
            }
        }
    }

    private void HideToast()
    {
        showToast = false;
    }
}
