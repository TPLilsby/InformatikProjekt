@page "/create-product"

@using LagerSystem.Shared.Models;
@using LagerSystem.Shared.Repositories;
@inject IProductRepository ProductRepository

<h3>Opret nyt produkt</h3>

<div class="form-group">
    <label>Produktnavn</label>
    <input type="text" @bind="newProduct.Name" class="form-control" />
</div>

<div class="form-group">
    <label>Kategori</label>
    <input type="text" @bind="newProduct.Category" class="form-control" />
</div>

<div class="form-group">
    <label>Leverandør</label>
    <input type="text" @bind="newProduct.Supplier" class="form-control" />
</div>

<div class="form-group">
    <label>Lagerantal</label>
    <input type="number" @bind="newProduct.StockQuantity" class="form-control" />
</div>

<div class="form-group">
    <label>Pris</label>
    <input type="number" step="0.01" @bind="newProduct.Price" class="form-control" />
</div>

<div class="form-group">
    <label>Genbestillingsniveau</label>
    <input type="number" @bind="newProduct.ReorderLevel" class="form-control" />
</div>

<button @onclick="AddNewProduct" class="btn btn-success">Opret produkt</button>

@if (successMessage != null)
{
    <p class="text-success">@successMessage</p>
}

@code {
    private Product newProduct = new Product();
    private string? successMessage;

    private async Task AddNewProduct()
    {
        await ProductRepository.AddProductAsync(newProduct);
        successMessage = "Produktet er oprettet!";
        newProduct = new Product(); // Nulstil formularen
    }
}
